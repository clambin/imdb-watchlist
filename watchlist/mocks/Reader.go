// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	watchlist "github.com/clambin/imdb-watchlist/watchlist"
	mock "github.com/stretchr/testify/mock"
)

// Reader is an autogenerated mock type for the Reader type
type Reader struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *Reader) GetAll() ([]watchlist.Entry, error) {
	ret := _m.Called()

	var r0 []watchlist.Entry
	if rf, ok := ret.Get(0).(func() []watchlist.Entry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]watchlist.Entry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByTypes provides a mock function with given fields: validTypes
func (_m *Reader) GetByTypes(validTypes ...string) ([]watchlist.Entry, error) {
	_va := make([]interface{}, len(validTypes))
	for _i := range validTypes {
		_va[_i] = validTypes[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []watchlist.Entry
	if rf, ok := ret.Get(0).(func(...string) []watchlist.Entry); ok {
		r0 = rf(validTypes...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]watchlist.Entry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...string) error); ok {
		r1 = rf(validTypes...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
