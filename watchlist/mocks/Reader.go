// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	imdb "github.com/clambin/imdb-watchlist/pkg/imdb"
	mock "github.com/stretchr/testify/mock"
)

// Reader is an autogenerated mock type for the Reader type
type Reader struct {
	mock.Mock
}

// ReadByTypes provides a mock function with given fields: validTypes
func (_m *Reader) ReadByTypes(validTypes ...string) ([]imdb.Entry, error) {
	_va := make([]interface{}, len(validTypes))
	for _i := range validTypes {
		_va[_i] = validTypes[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []imdb.Entry
	if rf, ok := ret.Get(0).(func(...string) []imdb.Entry); ok {
		r0 = rf(validTypes...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]imdb.Entry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...string) error); ok {
		r1 = rf(validTypes...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewReader interface {
	mock.TestingT
	Cleanup(func())
}

// NewReader creates a new instance of Reader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReader(t mockConstructorTestingTNewReader) *Reader {
	mock := &Reader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
